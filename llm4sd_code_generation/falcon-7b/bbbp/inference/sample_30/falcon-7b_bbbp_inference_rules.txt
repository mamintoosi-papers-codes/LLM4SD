def rule55302_hb_donors1232143(mol):
    """
    Calculates the number of hydrogen bond donors in a molecule.
    Args:
        mol: RDKit molecule object.
    Returns:
        int: Number of hydrogen bond donors.
    """
    return rdMolDescriptors.CalcNumHBD(mol)

def rule950021_hb_acceptor35749(mol):
    """
    Calculates the number of hydrogen bond acceptors in a molecule.
    Args:
        mol: RDKit molecule object.
    Returns:
        int: Number of hydrogen bond acceptors.
    """
    return rdMolDescriptors.CalcNumHBA(mol)

def rule_bisphenol_oxygen_ratio(mol):
    """
    Calculates the number of B (Bisphenol) atoms and O (Oxygen) atoms.
    This is a placeholder since determining 'Bisphenol' atoms requires
    a predefined pattern or atom type.  We will count Oxygen atoms as a proxy.
    The "B" atoms are represented here by counting the Oxygen atoms ( as a proxy)
    Args:
        mol: RDKit molecule object.
    Returns:
        int: The difference between oxygen atom count and oxygen atom count. (Oxygen - Oxygen)
    """
    oxygen_count = sum([mol.GetAtomWithIdx(i).GetAtomicNum() == 8 for i in range(mol.GetNumAtoms())])
    return oxygen_count - oxygen_count

def rule_carbon_count(mol):
    """
    Calculates the number of carbon atoms in a molecule.
    Args:
        mol: RDKit molecule object.
    Returns:
        int: The number of carbon atoms.
    """
    carbon_count = sum([mol.GetAtomWithIdx(i).GetAtomicNum() == 6 for i in range(mol.GetNumAtoms())])
    return carbon_count

def rule_molecular_weight(mol):
    """
    Calculates the molecular weight of a molecule.
    Args:
        mol: RDKit molecule object.
    Returns:
        float: Molecular weight.
    """
    return Descriptors.MolWt(mol)


def rule_logp(mol):
    """
    Calculates the LogP value of a molecule.
    Args:
        mol: RDKit molecule object.
    Returns:
        float: LogP value.
    """
    try:
        return Descriptors.MolLogP(mol)
    except:
        return 0.0


def rule_number_of_rings(mol):
    """
    Calculates the number of rings in a molecule.
    Args:
        mol: RDKit molecule object.
    Returns:
        int: Number of rings.
    """
    return rdMolDescriptors.GetRingInfo(mol)[0]

def rule55302_hb_donors1232143(mol):
    """
    Calculates the number of hydrogen bond donors in a molecule.

    Args:
        mol: RDKit Mol object.

    Returns:
        int: The number of hydrogen bond donors.
    """
    return rdMolDescriptors.CalcNumHBD(mol)

def rule950021_hb_acceptor35749(mol):
    """
    Calculates the number of hydrogen bond acceptors in a molecule.

    Args:
        mol: RDKit Mol object.

    Returns:
        int: The number of hydrogen bond acceptors.
    """
    return rdMolDescriptors.CalcNumHBA(mol)

def rule_carbon_oxygen_ratio(mol):
    """
    Calculates the number of carbon atoms minus the number of oxygen atoms.
    """
    carbon_count = 0
    oxygen_count = 0
    for atom in mol.GetAtoms():
        if atom.GetSymbol() == 'C':
            carbon_count += 1
        elif atom.GetSymbol() == 'O':
            oxygen_count += 1
    return carbon_count - oxygen_count


    Args:
        mol: RDKit Mol object.

    Returns:
        int: 1 if the number of carbon atoms is greater than the number of oxygen atoms, 0 otherwise.
    """
    carbon_count = sum([atom.GetAtomicMass() == 12.011 for atom in mol.GetAtoms()])
    oxygen_count = sum([atom.GetAtomicMass() == 15.999 for atom in mol.GetAtoms()])

def rule_molecular_weight(mol):
    """
    Calculates the molecular weight of the molecule.

    Args:
        mol: RDKit Mol object.

    Returns:
        float: The molecular weight of the molecule.
    """
    return rdMolDescriptors.CalcMW(mol)

def rule_rotatable_bonds(mol):
    """
    Calculates the number of rotatable bonds in the molecule.

    Args:
        mol: RDKit Mol object.

    Returns:
        int: The number of rotatable bonds.
    """
    return rdMolDescriptors.CalcNumRotatableBonds(mol)

def rule_number_of_rings(mol):
    """
    Calculates the number of rings in the molecule.

    Args:
        mol: RDKit Mol object.

    Returns:
        int: The number of rings.
    """
    return rdMolDescriptors.CalcNumRings(mol)
